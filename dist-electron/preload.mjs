"use strict";const r=require("electron");r.contextBridge.exposeInMainWorld("ipcRenderer",{on(...e){const[n,i]=e;return r.ipcRenderer.on(n,(o,...t)=>i(o,...t))},off(...e){const[n,...i]=e;return r.ipcRenderer.off(n,...i)},send(...e){const[n,...i]=e;return r.ipcRenderer.send(n,...i)},invoke(...e){const[n,...i]=e;return r.ipcRenderer.invoke(n,...i)}});r.contextBridge.exposeInMainWorld("electronAPI",{convertAudio:e=>r.ipcRenderer.invoke("convert-audio",e),saveFileDialog:()=>r.ipcRenderer.invoke("save-file-dialog"),saveFileToDisk:(e,n)=>r.ipcRenderer.invoke("save-file-to-disk",Buffer.from(e),n),copyFile:(e,n)=>r.ipcRenderer.invoke("copy-file",e,n),getTranscriptionProviders:()=>r.ipcRenderer.invoke("get-transcription-providers"),transcribeAudio:e=>r.ipcRenderer.invoke("transcribe-audio",e),storeGet:e=>r.ipcRenderer.invoke("store-get",e),storeSet:(e,n)=>r.ipcRenderer.invoke("store-set",e,n),storeDelete:e=>r.ipcRenderer.invoke("store-delete",e),storeClear:()=>r.ipcRenderer.invoke("store-clear")});
